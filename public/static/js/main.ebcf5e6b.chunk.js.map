{"version":3,"sources":["services/attackService.js","store/actions/attackAction.js","services/exportContentToDocx.js","cmps/AccordionPreview.jsx","cmps/AttackPreview.jsx","cmps/AttackList.jsx","cmps/Loading.jsx","cmps/Pagination.jsx","cmps/Filter.jsx","services/statisticService.js","routes.js","pages/AttackDetails.jsx","pages/Statistics.jsx","pages/AttackApp.jsx","cmps/Header.jsx","RootCmp.jsx","store/reducers/attackReducer.js","store/store.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["axios","Axios","create","withCredentials","BASE_URL","attackService","query","getAttackById","filterBy","a","get","params","res","data","console","log","id","_setAttacks","attacks","type","loadAttacks","dispatch","setFilter","_setFilter","exportDoc","attack","doc","Document","sections","properties","children","Paragraph","TextRun","text","objects","name","bold","color","font","x_mitre_platforms","toString","moment","created","calendar","modified","kill_chain_phases","phase_name","spacing","before","description","x_mitre_detection","Packer","toBlob","then","blob","saveAs","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","AccordionPreview","classes","className","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","component","variant","Button","onClick","to","_id","AttackPreview","AttackList","map","display","marginLeft","Loading","CircularProgress","marginTop","PaginationMatirial","page","noOfPages","onChangePage","Pagination","count","onChange","defaultPage","showFirstButton","showLastButton","size","margin","Filter","dataSource","useState","setFilterBy","useDispatch","handleInput","target","value","filterByCopy","onResetSearch","noValidate","autoComplete","onSubmit","ev","preventDefault","TextField","label","statisticService","createStatistics","reduce","acc","platform","platforms","x_mitre_data_sources","dataSources","createPieData","statistics","series","Object","values","options","chart","labels","keys","responsive","breakpoint","legend","position","createBarData","annotations","points","x","seriesIndex","borderColor","offsetY","style","background","height","plotOptions","bar","borderRadius","columnWidth","dataLabels","enabled","stroke","grid","row","colors","xaxis","rotate","categories","tickPlacement","yaxis","title","fill","gradient","shade","shadeIntensity","gradientToColors","undefined","inverseColors","opacityFrom","opacityTo","stops","routes","path","props","setAttack","useSelector","state","attackModule","useEffect","loadAttack","attackId","match","x_mitre_contributors","x_mitre_permissions_required","permission","attacksWithDataSource","filter","includes","setCommonTagAttacks","history","push","onSearchDataSource","external_references","rel","href","url","contributor","dataPlatforms","setDataPlatforms","setDataSources","createState","setPage","setNoOfPages","load","onSetNumberOfPages","Math","ceil","length","slice","event","Header","exact","activeClassName","RootCmp","route","initialState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","location","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebcf5e6b.chunk.js","sourcesContent":["import Axios from 'axios'\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\n// const BASE_URL = 'http://localhost:3030/api/attack';\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/attack'\r\n    : '//localhost:3030/api/attack'\r\n\r\n\r\nexport const attackService = {\r\n    query,getAttackById\r\n}\r\n\r\nasync function query(filterBy){\r\n    try{\r\n        const res = await axios.get(BASE_URL,{ params: filterBy });\r\n        return res.data;\r\n    }\r\n    catch(err){\r\n        console.log('error with query ',err);\r\n    }\r\n}\r\n\r\nasync function getAttackById(id){\r\n    try {\r\n        const res = await axios.get(`${BASE_URL}/${id}`)\r\n        return res.data;\r\n    }\r\n    catch(err){\r\n        console.log('error with getting attack by id',err)\r\n    }\r\n}\r\n\r\n","\r\nimport { attackService } from './../../services/attackService';\r\n\r\n// Creators\r\nconst _setAttacks = (attacks) => ({ type: 'SET_ATTACKS', attacks });\r\nconst _setFilter = (filterBy) => ({ type: 'SET_FILTER', filterBy });\r\nconst _setCommonTagAttacks = (attacksWithDataSource) => ({ type: 'SET_COMMON_TAGS_ATTACK', attacksWithDataSource });\r\n\r\n\r\n// Dispatchers\r\n// THUNK\r\nexport function loadAttacks(filterBy) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const attacks = await attackService.query(filterBy);\r\n            dispatch(_setAttacks(attacks));\r\n        }\r\n        catch (err) {\r\n            console.log('Error with set attacks ', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => dispatch(_setFilter(filterBy));\r\n}\r\n\r\nexport function setCommonTagAttacks(attacks, dataSource) {\r\n    return (dispatch) => dispatch(_setCommonTagAttacks({ attacks, dataSource }));\r\n}\r\n\r\n\r\n","import { Document, Packer, Paragraph, TextRun } from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport moment from 'moment';\r\n\r\nexport function exportDoc(attack) {\r\n\r\n    const doc = new Document({\r\n        sections: [{\r\n            properties: {},\r\n            children: [\r\n\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({ text: `${attack.objects[0].name} Attack`, bold: true, color: \"blue\", font: \"Segoe UI\" }),\r\n                    ],\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({ text: \"ID: \", bold: true, font: \"Segoe UI\" }),\r\n                        new TextRun({ text: ` ${attack.objects[0].id}`, bold: true, font: \"Segoe UI\" }),\r\n                    ]\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({ text: \"Platforms: \", bold: true, font: \"Segoe UI\" }),\r\n                        new TextRun({ text: ` ${attack.objects[0].x_mitre_platforms.toString()}`, bold: true, font: \"Segoe UI\" }),\r\n                    ]\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({ text: \"Created: \", bold: true, font: \"Segoe UI\" }),\r\n                        new TextRun({ text: ` ${moment(attack.objects[0].created).calendar()}`, bold: true, font: \"Segoe UI\" }),\r\n                    ]\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({ text: \"Modified: \", bold: true, font: \"Segoe UI\" }),\r\n                        new TextRun({ text: ` ${moment(attack.objects[0].modified).calendar()}`, bold: true, font: \"Segoe UI\" }),\r\n                    ]\r\n                }),\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({ text: \"Phase name: \", bold: true, font: \"Segoe UI\" }),\r\n                        new TextRun({ text: ` ${attack.objects[0].kill_chain_phases[0].phase_name}`, font: \"Segoe UI\" })\r\n                    ]\r\n                }),\r\n                new Paragraph({\r\n                    spacing: {\r\n                        before: 300,\r\n                    },\r\n                    children: [\r\n                        new TextRun({ text: \"Description: \", bold: true, font: \"Segoe UI\" }),\r\n                        new TextRun({ text: ` ${attack.objects[0].description}`, font: \"Segoe UI\" }),\r\n                    ]\r\n                },\r\n                ),\r\n                new Paragraph({\r\n                    spacing: {\r\n                        before: 300,\r\n                    },\r\n                    children: [\r\n                        new TextRun({ text: \"Detection: \", bold: true, font: \"Segoe UI\" }),\r\n                        new TextRun({ text: `  ${attack.objects[0].x_mitre_detection}`, font: \"Segoe UI\" })\r\n                    ]\r\n                })\r\n            ],\r\n        }],\r\n    });\r\n\r\n\r\n\r\n    Packer.toBlob(doc).then(blob => {\r\n        saveAs(blob, `${attack.objects[0].name}.docx`);\r\n        console.log(\"Document created successfully\");\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { exportDoc } from './../services/exportContentToDocx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport function AccordionPreview({ attack }) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const { id, name, created, description } = attack.objects[0];\r\n\r\n  return (\r\n    <section className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={classes.heading}><span className=\"headline\">\r\n            {name}</span>\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography component={'div'} variant={'body2'}>\r\n            <div id=\"exportContent\">\r\n              <span className=\"headline\">Attack ID:</span> <p>{id}</p>\r\n              <span className=\"headline\">Created: </span> <p>{moment(created).calendar()}</p>\r\n              <div>\r\n                {description &&\r\n                  <div> <span className=\"headline\">Description:</span> <p>{description}</p>\r\n                  </div>}\r\n              </div>\r\n            </div>\r\n            <div className=\"actions\">\r\n              <div>\r\n              {attack.objects[0].x_mitre_detection &&\r\n                <Button onClick={() => exportDoc(attack)}\r\n                  variant=\"contained\">Export as .docx</Button>}\r\n              </div>\r\n              <Link to={`/${attack._id}`}>\r\n                <div className=\"details-btn\"> <Button variant=\"contained\">Details</Button></div>\r\n              </Link>\r\n            </div>\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { AccordionPreview } from './AccordionPreview';\r\n\r\nexport function AttackPreview({attack}) {\r\n    return (\r\n    <li className=\"attack-preview\">\r\n        <AccordionPreview attack={attack}/>\r\n    </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AttackPreview } from './AttackPreview';\r\n\r\n\r\nexport function AttackList({ attacks }) {\r\n    return (\r\n        <ul className=\"list-container\">\r\n            {attacks.map((attack) => {\r\n                return <AttackPreview key={attack._id} attack={attack} />\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport function PaginationMatirial({ page,noOfPages,onChangePage }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Pagination\r\n                count={noOfPages}\r\n                page={page}\r\n                onChange={onChangePage}\r\n                defaultPage={1}\r\n                showFirstButton\r\n                showLastButton\r\n                size=\"large\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { setFilter } from '../store/actions/attackAction';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Filter({ dataSource }) {\r\n  const classes = useStyles();\r\n\r\n  const [filterBy, setFilterBy] = useState({ name: '', description: '' })\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    let filterByCopy = { ...filterBy }\r\n    filterByCopy = { ...filterBy, [name]: value };\r\n    setFilterBy(filterByCopy);\r\n  }\r\n\r\n  const onSubmit = (ev) => {\r\n    console.log('search')\r\n    ev.preventDefault();\r\n    dispatch(setFilter(filterBy));\r\n  }\r\n\r\n  const onResetSearch = () => {\r\n    setFilterBy({ name: '', description: '' })\r\n    dispatch(setFilter({ name: '', description: '', dataSource: null }));\r\n  }\r\n\r\n\r\n  if (dataSource) return <div className=\"data-source-container\">\r\n    <h2 className=\"data-source\">Showing attacks with data source: {dataSource}</h2>\r\n    <Button variant=\"contained\" type=\"button\" onClick={onResetSearch}>Load full list</Button>\r\n  </div>\r\n  return (\r\n    <section className=\"filter-container\">\r\n      <form className={`form-filter ${classes.root}`} \r\n      noValidate autoComplete=\"off\" onSubmit={(ev) => onSubmit(ev)}>\r\n        <TextField id=\"standard-basic\" label=\"Name\" onChange={(ev) => handleInput(ev)} \r\n        value={filterBy.name} name=\"name\" />\r\n        <TextField id=\"standard-basic\" label=\"Description\" onChange={(ev) => handleInput(ev)}\r\n         value={filterBy.description} name=\"description\" />\r\n        <Button type=\"submit\" variant=\"contained\"> <strong>Search</strong> </Button>\r\n        <Button variant=\"contained\" type=\"button\" onClick={onResetSearch}><strong>Reset</strong></Button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","export const statisticService = {\r\n    createStatistics, createPieData, createBarData\r\n}\r\n\r\nfunction createStatistics(attacks) {\r\n    return attacks.reduce((acc, attack) => {\r\n        if (attack.objects[0].x_mitre_platforms) {\r\n            attack.objects[0].x_mitre_platforms.map((platform) => {\r\n                var count = acc.platforms[platform];\r\n                acc.platforms[platform] = count ? count + 1 : 1;\r\n            })\r\n        }\r\n        if (attack.objects[0].x_mitre_data_sources) {\r\n            attack.objects[0].x_mitre_data_sources.map((dataSource) => {\r\n                var count = acc.dataSources[dataSource];\r\n                acc.dataSources[dataSource] = count ? count + 1 : 1;\r\n            })\r\n        }\r\n        return acc;\r\n    }, { platforms: {}, dataSources: {}, })\r\n\r\n}\r\n\r\nfunction createPieData(statistics) {\r\n    return {\r\n        series: Object.values(statistics.platforms),\r\n        options: {\r\n            chart: {\r\n                width: 600,\r\n                type: 'pie',\r\n\r\n            },\r\n            labels: Object.keys(statistics.platforms),\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 400\r\n\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n    };\r\n}\r\n\r\nfunction createBarData(statistics) {\r\n    return {\r\n        series: [{\r\n            name: 'Attacks',\r\n            data: Object.values(statistics.dataSources)\r\n        }],\r\n        options: {\r\n            annotations: {\r\n                points: [{\r\n                    x: 'Attacks',\r\n                    seriesIndex: 0,\r\n                    label: {\r\n                        borderColor: '#775DD0',\r\n                        offsetY: 0,\r\n                        style: {\r\n                            color: '#fff',\r\n                            background: '#775DD0',\r\n                        },\r\n                        text: '',//TODO \r\n                    }\r\n                }]\r\n            },\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    borderRadius: 10,\r\n                    columnWidth: '50%',\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                width: 2\r\n            },\r\n\r\n            grid: {\r\n                row: {\r\n                    colors: ['#fff', '#f2f2f2']\r\n                }\r\n            },\r\n            xaxis: {\r\n                labels: {\r\n                    rotate: -45\r\n                },\r\n                categories: Object.keys(statistics.dataSources),\r\n                tickPlacement: 'on'\r\n            },\r\n            yaxis: {\r\n                title: {\r\n                    text: 'Data Sources',\r\n                },\r\n            },\r\n            fill: {\r\n                type: 'gradient',\r\n                gradient: {\r\n                    shade: 'light',\r\n                    type: \"horizontal\",\r\n                    shadeIntensity: 0.25,\r\n                    gradientToColors: undefined,\r\n                    inverseColors: true,\r\n                    opacityFrom: 0.85,\r\n                    opacityTo: 0.85,\r\n                    stops: [50, 0, 100]\r\n                },\r\n            }\r\n        },\r\n    };\r\n}","import { AttackApp } from './pages/AttackApp';\r\nimport { AttackDetails } from './pages/AttackDetails';\r\nimport { Statistics } from './pages/Statistics';\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/:attackId',\r\n        component: AttackDetails\r\n    },\r\n    {\r\n        path: '/attack/statistics',\r\n        component: Statistics\r\n    },\r\n    {\r\n        path: '/',\r\n        component: AttackApp\r\n    },\r\n]","import React, { useEffect, useState } from 'react';\r\nimport { attackService } from './../services/attackService';\r\nimport Loading from './../cmps/Loading';\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport { exportDoc } from './../services/exportContentToDocx';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCommonTagAttacks } from './../store/actions/attackAction';\r\n\r\n\r\nexport function AttackDetails(props) {\r\n\r\n    const [attack, setAttack] = useState(null);\r\n    const { attacks } = useSelector(state => state.attackModule);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        loadAttack()\r\n    }, [])\r\n\r\n    const loadAttack = async () => {\r\n        const { attackId } = props.match.params;\r\n        const attack = await attackService.getAttackById(attackId);\r\n        setAttack(attack);\r\n    }\r\n\r\n    const onSearchDataSource = (dataSource) => {\r\n        const attacksWithDataSource = attacks.filter((attack) => {\r\n            if (!attack.objects[0].x_mitre_data_sources) return false;\r\n            return attack.objects[0].x_mitre_data_sources.includes(dataSource)\r\n        })\r\n        dispatch(setCommonTagAttacks(attacksWithDataSource, dataSource));\r\n        props.history.push('/')\r\n    }\r\n\r\n    if (!attack) return <Loading />;\r\n    const { name, created, description, id, modified, x_mitre_contributors, kill_chain_phases,\r\n        x_mitre_data_sources, x_mitre_detection, x_mitre_permissions_required,\r\n        x_mitre_platforms } = attack.objects[0];\r\n    return (\r\n\r\n        <section className=\"details-container max-layout\">\r\n            <div className=\"details-actions\">\r\n                <Link to=\"/\">\r\n                    <Button variant=\"contained\">Back</Button>\r\n                </Link>\r\n                {attack.objects[0].x_mitre_detection && <div>\r\n                    <Button onClick={() => exportDoc(attack)}\r\n                        variant=\"contained\">Export as .docx</Button>\r\n                </div>}\r\n            </div>\r\n\r\n            <h1>{name}</h1>\r\n            <div>\r\n                <strong>Created:</strong> <span>{moment(created).calendar()}</span>\r\n            </div>\r\n            <div>\r\n                <strong>Modified:</strong> <span>{moment(modified).calendar()}</span>\r\n            </div>\r\n            <div>\r\n                <strong>Id: </strong> <span>{id}</span>\r\n            </div>\r\n            <div>\r\n                {kill_chain_phases ? <div> <strong>phase name:\r\n                     </strong> <span>{kill_chain_phases[0].phase_name}</span></div>\r\n                    : <div><strong>kill_chain_phases</strong> <span>: NA</span> </div>}\r\n            </div>\r\n\r\n            <div>\r\n                {x_mitre_platforms &&\r\n                    <div className=\"inline\"> <span className=\"headline\">{`Platforms:`}</span>\r\n                        <div >{x_mitre_platforms.map((platform) => {\r\n                            return <span key={platform}>{` ${platform} `}</span>\r\n                        })}</div>\r\n                    </div>}\r\n            </div>\r\n            <div>\r\n                {x_mitre_permissions_required &&\r\n                    <div className=\"inline\"> <span className=\"headline\">Permissions:</span>\r\n                        <div >{x_mitre_permissions_required.map((permission) => {\r\n                            return <span key={permission}>{` ${permission} `}</span>\r\n                        })}</div>\r\n                    </div>}\r\n            </div>\r\n\r\n            <div>\r\n                {description &&\r\n                    <div> <span className=\"headline\">Description:</span> <p>{description}</p>\r\n                    </div>}\r\n            </div>\r\n            <div>\r\n                {x_mitre_detection &&\r\n                    <div> <span className=\"headline\">Detection:</span> <p>{x_mitre_detection}</p>\r\n                    </div>}\r\n            </div>\r\n            <div>\r\n                {x_mitre_data_sources &&\r\n                    <div className=\"inline\"> <span className=\"headline\">Data Sources(tags):</span>\r\n\r\n                        <div >{x_mitre_data_sources.map((data) => {\r\n                            return <span onClick={() => onSearchDataSource(data)}\r\n                                className=\"data-source-tag\" key={data}>{`#${data}`} </span>\r\n                        })}</div>\r\n                    </div>}\r\n\r\n            </div>\r\n            <div>\r\n                {attack.objects[0].external_references[0] &&\r\n                    <div className=\"inline\"> <span className=\"headline\">Read more:</span>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n                            href={attack.objects[0].external_references[0].url}>\r\n                            {attack.objects[0].external_references[0].url}\r\n                        </a>\r\n                    </div>}\r\n            </div>\r\n\r\n            <div>\r\n                {x_mitre_contributors &&\r\n                    <div className=\"inline\"> <span className=\"headline\">Contributors:</span>\r\n                        <div >{x_mitre_contributors.map((contributor) => {\r\n                            return <span key={contributor}>{` ${contributor} `}</span>\r\n                        })}</div>\r\n                    </div>}\r\n            </div>\r\n            <div className=\"export-btn\">\r\n\r\n            </div>\r\n\r\n\r\n        </section>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { useSelector } from 'react-redux';\r\nimport Loading from './../cmps/Loading';\r\nimport { statisticService } from './../services/statisticService';\r\n\r\n\r\nexport function Statistics() {\r\n    const [dataPlatforms, setDataPlatforms] = useState(null)\r\n    const [dataSources, setDataSources] = useState(null)\r\n    const { attacks } = useSelector(state => state.attackModule);\r\n\r\n    useEffect(() => {\r\n        createState();\r\n    }, [attacks])\r\n\r\n    const createState = () => {\r\n        if (!attacks) return;\r\n        console.log(attacks);\r\n        const statistics = statisticService.createStatistics(attacks);\r\n        setDataPlatforms(statisticService.createPieData(statistics));\r\n        setDataSources(statisticService.createBarData(statistics));\r\n    }\r\n\r\n\r\n    if (!attacks || !dataPlatforms || !dataSources) return <Loading />\r\n    return (\r\n        <section className=\"statistics-container max-layout\">\r\n            <div className=\"pie-chart\">\r\n                <h2>Platforms</h2>\r\n                <h3>Attacks per platform</h3>\r\n                <ReactApexChart options={dataPlatforms.options} series={dataPlatforms.series} type=\"pie\" width={500} />\r\n            </div>\r\n            <div className=\"bar-chart\">\r\n                <h2>Data sources</h2>\r\n                <h3>Attacks per data source</h3>\r\n                <ReactApexChart options={dataSources.options} series={dataSources.series} type=\"bar\" height={500} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadAttacks } from './../store/actions/attackAction';\r\nimport { AttackList } from '../cmps/AttackList';\r\nimport Loading from './../cmps/Loading';\r\nimport { PaginationMatirial } from './../cmps/Pagination';\r\nimport { Filter } from '../cmps/Filter';\r\n\r\nexport function AttackApp() {\r\n  const { attacks, filterBy, dataSource } = useSelector(state => state.attackModule);\r\n  const dispatch = useDispatch();\r\n  const itemsPerPage = 7;\r\n  const [page, setPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState(10);\r\n\r\n  useEffect(() => {\r\n    load();\r\n  }, [filterBy])\r\n\r\n  useEffect(() => {\r\n    onSetNumberOfPages();\r\n  }, [attacks])\r\n\r\n  const load = () => {\r\n    if (dataSource) return;\r\n    dispatch(loadAttacks(filterBy))\r\n  }\r\n\r\n  const onSetNumberOfPages = () => {\r\n    if (!attacks) return;\r\n    setNoOfPages(Math.ceil(attacks.length / itemsPerPage))\r\n  }\r\n\r\n  const onChangePage = (event, value) => {\r\n    setPage(value);\r\n  }\r\n\r\n\r\n  const onGetAttacksForDisplay = () => {\r\n    return attacks.slice((page - 1) * itemsPerPage, page * itemsPerPage)\r\n  }\r\n\r\n\r\n  if (!attacks) return <section className=\"loading-container\">\r\n    <Filter dataSource={dataSource} />\r\n    <Loading />\r\n  </section>\r\n  return (\r\n    <section className=\"app-container max-layout\">\r\n      <Filter dataSource={dataSource} />\r\n      <h1>Attacks list</h1>\r\n      <AttackList attacks={onGetAttacksForDisplay()} />\r\n      <div className=\"pagination-container\">\r\n        <PaginationMatirial noOfPages={noOfPages} page={page} onChangePage={onChangePage} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport function Header() {\r\n    return (\r\n        <section className=\"header-container\">\r\n            <div className=\"header-hero max-layout\">\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink exact activeClassName=\"selected\" to=\"/\">Home</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"selected\" to=\"/attack/statistics\">Statistics</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { Route, Switch } from 'react-router';\nimport './assets/styles/main.scss';\nimport { routes } from './routes';\nimport { Header } from './cmps/Header';\nimport { useEffect } from 'react';\nimport { loadAttacks } from './store/actions/attackAction';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport function RootCmp() {\n  const { dataSource } = useSelector(state => state.attackModule);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    load();\n  }, [])\n\n  const load = () => {\n    if(dataSource) return;\n    dispatch(loadAttacks());\n  }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Switch>\n        {routes.map((route) => (\n          <Route\n            exact\n            key={route.path}\n            component={route.component}\n            path={route.path}\n          />\n        ))}\n      </Switch>\n    </div>\n  );\n}\n","const initialState = {\r\n    attacks: null,\r\n    dataSource:null,\r\n    filterBy: {\r\n        name: '',\r\n        description: ''\r\n    }\r\n}\r\n\r\nexport function attackReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_ATTACKS':\r\n            return { ...state, attacks: action.attacks }\r\n        case 'SET_FILTER':\r\n            return { ...state, filterBy: action.filterBy,dataSource:action.dataSource }\r\n        case 'SET_COMMON_TAGS_ATTACK':\r\n            return { ...state, attacks: action.attacksWithDataSource.attacks,dataSource:action.attacksWithDataSource.dataSource }\r\n        default:\r\n            return state\r\n    }\r\n}","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\n\r\nimport { attackReducer } from './reducers/attackReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    attackModule: attackReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { RootCmp } from './RootCmp';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <RootCmp />\n      </Router>\n    </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}